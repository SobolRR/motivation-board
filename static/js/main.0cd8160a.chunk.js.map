{"version":3,"sources":["components/Form.jsx","components/Xaxis.jsx","components/ProgressBar.jsx","App.js","index.js"],"names":["Option","Select","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Demo","onFinish","names","name","Item","label","placeholder","onChange","allowClear","map","value","rules","type","offset","htmlType","Xaxis","props","points","values","idx","className","style","left","maxValue","ProgressBar","records","pointsValues","goalMarkerPos","items","sort","a","b","record","width","Math","max","Number","length","toFixed","valueStyle","transform","backgroundColor","color","margin","position","defaultProps","App","useState","setRecords","totalGoal","personalGoal","personalRecords","goal","updateData","prev","storageData","JSON","parse","localStorage","getItem","item","findIndex","person","total","useEffect","updatedDate","data","currentDataCopy","push","setItem","stringify","saveInLocalStorage","CustomModal","isModalVisible","setIsModalVisible","onClick","title","visible","onCancel","footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd8160a.chunk.js","sourcesContent":["import { Form, Input, Button,DatePicker, Select } from 'antd';\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\n\n/* eslint-disable no-template-curly-in-string */\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\nexport const Demo = ({onFinish,names}) => {\n\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n      <Form.Item name={[ 'name']} label=\"Name\">\n      <Select\n          placeholder=\"Select name\"\n          onChange={()=>{}}\n          allowClear\n        >\n          {names.map((name) =><Option key={name} value={name}>{name}</Option>)}\n        \n        </Select>\n      </Form.Item>\n      <Form.Item name={[\"date\"]} label=\"Date\" rules={[{ required: true }]}>\n      <DatePicker  />\n      </Form.Item>\n      <Form.Item name={[ 'total']} label=\"Total\" >\n      <Input type=\"number\" />\n      </Form.Item>\n    \n \n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\" >\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","\nexport const Xaxis = (props) => {\n    const points = props.values.map((value,idx) => {\n\n      return     <div className=\"point\" key={idx}><span className=\"point__number\" style={{left:value * 100 / props.maxValue  +\"%\"}} >{value}</span></div>\n    })\n    return (\n    <div className=\"x-axis\">\n      {points}\n    </div>)\n  }\n\n  Xaxis.defaultProps = {\n    values:[50000,100000,150000,200000,250000]\n  }","import { Xaxis } from \"./Xaxis\";\n\nexport function ProgressBar({records,pointsValues,goalMarkerPos}) {\n\n  const items = records.sort((a, b) => a.value + b.value ).map((record,idx) => {\n    const width = record.value * 100 / Math.max(...pointsValues)\n    let value = record.value\nif(Number(record.value) === 0){\n//  value =\"\"\nreturn null\n  \n}\n\nelse if(records.length >1){\n  value = (value * 100 /200000).toFixed(2) + \"%\"\n\n}\nconst transformValue = records.length > 1 ? \"rotate(-90deg)\":  \"rotate(0deg)\"\nconst valueStyle = {transform:transformValue}\n    return (\n      <div\n        className=\"progressbar__item\"\n        style={{ backgroundColor: record.color, width: width + \"%\" }}\n        key={record.name}\n    >\n        <span className=\"progressbar__value\" style={valueStyle}>{value}</span>\n      </div>\n    );\n  })\n\n  return (\n    <>\n      <div\n        className=\"progressbar-wrapper\"\n        style={{ margin: \"7rem 0\", position: \"relative\" }}\n      >{records.length === 1 && <span className=\"name\">{records[0].name}</span>}\n        {records.length === 1 && (\n          <div className=\"percentage\">\n            <div>7.5%</div>\n            <div>10%</div>\n            <div>13%</div>\n          </div>\n        )}\n        \n        <div className=\"progressbar\">\n          {items}\n          <div className=\"plan-marker\" style={{ left: goalMarkerPos }}></div>\n        </div>\n        <Xaxis values={pointsValues} maxValue={Math.max(...pointsValues)} />\n      </div>\n    </>\n  );\n}\n\n\n","import {useEffect,useState} from 'react'\nimport \"./App.scss\"\nimport 'antd/dist/antd.css';\nimport { Demo } from \"./components/Form\"\nimport { ProgressBar } from \"./components/ProgressBar\"\nimport { Modal, Button } from 'antd';\n\nexport default function App(props) {\nconst [records, setRecords] = useState([\n  {name:\"Юля\", value:0,color:\"#e4a21f\"},\n  {name:\"Катя\", value:0,color:\"#437fb7\"},\n  {name:\"Роман\", value:0,color:\"#3b8c13\"},]\n)\n\n  const totalGoal = 200000\n  const personalGoal = totalGoal / records.length\nconst personalRecords = records.sort((a, b) => b.value - a.value ).map((record, idx)=> {\n  return <ProgressBar records={[record]} key={record.name} pointsValues={[35000,50000,67000,100000]} goal={personalGoal} goalMarkerPos={personalGoal * 100 / 100000 + \"%\"}/>\n})\n\nconst updateData = (prev) => {\n  const storageData = JSON.parse(localStorage.getItem(\"motivational_board\"))\n  return prev\n    .map((item) => {\n      const idx = storageData.findIndex((person) => person.name === item.name);\n      if (idx > -1) {\n        return { ...item, value: storageData[idx].total };\n      }\n      return item;\n    })\n    .sort((a, b) => b.value - a.value);\n  }\n\n  const saveInLocalStorage = (data, storageData) => {\n    if(!storageData){\n      localStorage.setItem(\"motivational_board\", JSON.stringify([data]))\n      setRecords(updateData)\n    } else {\n      const currentDataCopy = [...storageData];\n      const idx = storageData.findIndex((item) => item.name === data.name);\n        if (idx > -1) {\n          currentDataCopy[idx] = data;\n        } else {\n          currentDataCopy.push(data);\n        }\n\n    localStorage.setItem(\"motivational_board\", JSON.stringify(currentDataCopy));}\n    \n  };\nconst onFinish = (updatedDate) => {\n  const currentLocalStorageData = JSON.parse(localStorage.getItem(\"motivational_board\"));\n\n  saveInLocalStorage(updatedDate,currentLocalStorageData)\n  setRecords(updateData)\n\n}\nuseEffect(()=>{\n  const storageData = JSON.parse(localStorage.getItem(\"motivational_board\"))\n  if(storageData){  setRecords(updateData)}\n  \n\n},[])\n const names = records.map((record) => record.name)\n  return (\n    <>\n    <CustomModal onFinish={onFinish} names={names}/>\n    <ProgressBar goal={totalGoal} records = {records} goalMarkerPos={totalGoal * 100 / 250000 + \"%\"} pointsValues={[50000,100000,150000,200000,250000]}/>\n    {personalRecords}\n    </>\n  );\n}\n\n\nconst CustomModal = ({onFinish,names}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const onFinishHandler = (data) => {\n    setIsModalVisible(false);\n    onFinish(data)\n\n  }\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Update\n      </Button>\n      <Modal title=\"Basic Modal\" visible={isModalVisible}  onCancel={handleCancel} footer={[]}>\n      <Demo onFinish={onFinishHandler} names={names} />\n\n      </Modal>\n    </>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}