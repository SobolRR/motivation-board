{"version":3,"sources":["components/Xaxis.jsx","assets/fire.gif","components/ProgressBar.jsx","core/api.js","App.js","index.js"],"names":["Xaxis","props","points","values","map","value","idx","className","style","left","maxValue","defaultProps","ProgressBar","records","pointsValues","totalGoal","planMarkerPos","bestManager","commonBar","items","record","width","Math","max","Number","length","toFixed","transformValue","backgroundColor","color","transform","name","margin","position","src","fireGif","alt","instance","axios","create","baseURL","fetchProfitByManages","startMoment","a","momentFrom","moment","startOf","format","momentTo","endOf","link","post","result","data","personalPoints","commonPoints","App","useState","setRecords","Date","setMomentFrom","loading","setLoading","colors","personalGoal","useEffect","then","item","employee","sellSum","sort","b","onChange","date","picker","goal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74a23140.chunk.js","sourcesContent":["\nexport const Xaxis = (props) => {\n    const points = props.values.map((value,idx) => {\n\n      return <div className=\"point\" key={idx}><span className=\"point__number\" style={{left:value * 100 / props.maxValue  +\"%\"}} >{value}</span></div>\n    })\n    return (\n    <div className=\"x-axis\">\n      {points}\n    </div>)\n  }\n\n  Xaxis.defaultProps = {\n    values:[50000,100000,150000,200000,250000]\n  }","export default __webpack_public_path__ + \"static/media/fire.42d52aef.gif\";","import { Xaxis } from \"./Xaxis\";\nimport fireGif from '../assets/fire.gif'\nexport function ProgressBar({records,pointsValues,totalGoal,planMarkerPos,bestManager,commonBar}) {\n  \n\n  const items = records.map((record) => {\n    const width = record.value * 100 / Math.max(...pointsValues) + \"%\"\n   \n    let value = record.value\nif (Number(record.value) === 0) {\n  return null;\n} else if (records.length > 1) {\n  value = ((value * 100) / totalGoal).toFixed(2) + '%'\n  \n}\n\nconst transformValue = commonBar ? \"rotate(-90deg)\":  \"rotate(0deg)\"\n    return (\n      <div\n        className=\"progressbar__item\"\n        style={{ backgroundColor: record.color, width: width }}\n        key={record.name}\n    >\n        <span className=\"progressbar__value\" style={{transform:transformValue}}>{value}</span>\n      </div>\n    );\n  })\n\n  return (\n    <>\n      <div\n        className=\"progressbar-wrapper\"\n        style={{ margin: \"7rem 0\", position: \"relative\" }}\n      >\n        {!commonBar && (\n          <>\n            <div className=\"name\">{bestManager && <img className =\"fire-icon\"src={fireGif} alt=\"firing...\" />}{records[0].name}</div>\n            <div className=\"percentage\">\n              <div>7.5%</div>\n              <div>10%</div>\n              <div>13%</div>\n            </div>\n          </>\n        )}\n\n        <div className=\"progressbar\">\n          {items}\n          <div className=\"plan-marker\" style={{ left: planMarkerPos }}></div>\n        </div>\n        <Xaxis values={pointsValues} maxValue={Math.max(...pointsValues)} />\n      </div>\n    </>\n  );\n}\n\n\n","import axios from \"axios\"\nimport moment from \"moment\"\n\n\n\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchProfitByManages = async (startMoment) => {\n  const momentFrom = `${new moment(startMoment).startOf('month').format(\"YYYY-MM-DD\")} 00:00:00`\n  const momentTo = `${new moment(momentFrom).endOf(\"month\").format(\"YYYY-MM-DD\")} 23:59:59`\n\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/profit/byemployee?momentFrom=${momentFrom}&momentTo=${momentTo}`\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\n\n","import {useEffect,useState} from 'react'\nimport \"./App.scss\"\nimport 'antd/dist/antd.css';\nimport { ProgressBar } from \"./components/ProgressBar\"\nimport { fetchProfitByManages } from './core/api';\nimport {DatePicker, Spin} from 'antd'\n\n\nconst personalPoints = [35000,50000,67000,100000]\nconst commonPoints = [50000,100000,150000,200000,250000,300000]\n\n\nexport default function App() {\nconst [records, setRecords] = useState([]\n)\nconst [momentFrom, setMomentFrom] = useState(new Date())\nconst [loading, setLoading] = useState(false)\nconst colors = [\"#e4a21f\",\"#437fb7\",\"#3b8c13\", \"purple\", \"orangered\"]\nconst totalGoal = 200000\nconst personalGoal = !!records.length ? totalGoal / records.length : 0\n\n\nfunction onMomentFromChange(date) {\n  setMomentFrom(date)\n}\n\nuseEffect(()=>{\n  setLoading(true)\n  fetchProfitByManages(momentFrom).then((data)=>{\n    const records = data.map((item,idx) => {\n      const color = colors[idx]\n      return {\n        name:item.employee.name,\n        value: +(item.sellSum / 100).toFixed(0),\n        color\n      }\n    }).sort((a, b) => b.value - a.value )\n    setRecords(records)\n    setLoading(false)\n\n  })\n  \n},[momentFrom])\nif(loading){\n  return  <div className=\"spinner\">\n  <Spin />\n</div>\n}\n\n  return (\n    <>\n    <DatePicker onChange={onMomentFromChange} picker=\"month\"/>\n    <ProgressBar goal={totalGoal} records = {records} commonBar planMarkerPos={totalGoal * 100 / 300000 + \"%\"} pointsValues={commonPoints} totalGoal={totalGoal}/>\n    {records.map((record,idx)=> {\n  return <ProgressBar bestManager={idx === 0} records={[record]} key={record.name} pointsValues={personalPoints} totalGoal={personalGoal} planMarkerPos={personalGoal * 100 / Math.max(...personalPoints) + \"%\"}/>\n})}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}