{"version":3,"sources":["components/Xaxis.jsx","components/ProgressBar.jsx","core/api.js","App.js","index.js"],"names":["Xaxis","props","points","values","map","value","idx","className","style","left","maxValue","ProgressBar","records","pointsValues","totalGoal","planMarkerPos","items","record","width","Math","max","Number","length","toFixed","transformValue","backgroundColor","color","transform","name","margin","position","defaultProps","instance","axios","create","baseURL","fetchProfitByManages","a","post","link","result","data","personalPoints","commonPoints","App","useState","setRecords","colors","personalGoal","useEffect","then","item","employee","sellSum","sort","b","goal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d173abdf.chunk.js","sourcesContent":["\nexport const Xaxis = (props) => {\n    const points = props.values.map((value,idx) => {\n\n      return     <div className=\"point\" key={idx}><span className=\"point__number\" style={{left:value * 100 / props.maxValue  +\"%\"}} >{value}</span></div>\n    })\n    return (\n    <div className=\"x-axis\">\n      {points}\n    </div>)\n  }\n\n  Xaxis.defaultProps = {\n    values:[50000,100000,150000,200000,250000]\n  }","import { Xaxis } from \"./Xaxis\";\n\nexport function ProgressBar({records,pointsValues,totalGoal,planMarkerPos}) {\n  \n\n  const items = records.map((record) => {\n    const width = record.value * 100 / Math.max(...pointsValues) + \"%\"\n   \n    let value = record.value\nif (Number(record.value) === 0) {\n  return null;\n} else if (records.length > 1) {\n  value = ((value * 100) / totalGoal).toFixed(2) + '%'\n  \n}\n\nconst transformValue = records.length > 1 ? \"rotate(-90deg)\":  \"rotate(0deg)\"\n    return (\n      <div\n        className=\"progressbar__item\"\n        style={{ backgroundColor: record.color, width: width }}\n        key={record.name}\n    >\n        <span className=\"progressbar__value\" style={{transform:transformValue}}>{value}</span>\n      </div>\n    );\n  })\n\n  return (\n    <>\n      <div\n        className=\"progressbar-wrapper\"\n        style={{ margin: \"7rem 0\", position: \"relative\" }}\n      >\n        {records.length === 1 && (\n          <>\n            <span className=\"name\">{records[0].name}</span>\n            <div className=\"percentage\">\n              <div>7.5%</div>\n              <div>10%</div>\n              <div>13%</div>\n            </div>\n          </>\n        )}\n\n        <div className=\"progressbar\">\n          {items}\n          <div className=\"plan-marker\" style={{ left: planMarkerPos }}></div>\n        </div>\n        <Xaxis values={pointsValues} maxValue={Math.max(...pointsValues)} />\n      </div>\n    </>\n  );\n}\n\n\n","import axios from \"axios\"\n\n\n\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchProfitByManages = async () => {\n  \n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/byemployee?momentFrom=2021-03-01 00:00:01 \"\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\n\n","import {useEffect,useState} from 'react'\nimport \"./App.scss\"\nimport 'antd/dist/antd.css';\nimport { ProgressBar } from \"./components/ProgressBar\"\nimport { fetchProfitByManages } from './core/api';\nimport {Spin} from 'antd'\n\n\nconst personalPoints = [35000,50000,67000,100000]\nconst commonPoints = [50000,100000,150000,200000,250000,300000]\n\n\nexport default function App(props) {\nconst [records, setRecords] = useState([]\n)\nconst colors = [\"#e4a21f\",\"#437fb7\",\"#3b8c13\"]\nconst totalGoal = 200000\nconst personalGoal = !!records.length ? totalGoal / records.length : 0\n\n\n\n\nuseEffect(()=>{\n  fetchProfitByManages().then((data)=>{\n    const records = data.map((item,idx) => {\n      const color = colors[idx]\n      return {\n        name:item.employee.name,\n        value: +(item.sellSum / 100).toFixed(0),\n        color\n      }\n    }).sort((a, b) => b.value - a.value )\n    setRecords(records)\n  })\n  \n},[])\nif(!records.length){\n  return  <div className=\"spinner\">\n  <Spin />\n</div>\n}\n\n  return (\n    <>\n    <ProgressBar goal={totalGoal} records = {records} planMarkerPos={totalGoal * 100 / 300000 + \"%\"} pointsValues={commonPoints} totalGoal={totalGoal}/>\n    {records.map((record)=> {\n  return <ProgressBar records={[record]} key={record.name} pointsValues={personalPoints} totalGoal={personalGoal} planMarkerPos={personalGoal * 100 / Math.max(...personalPoints) + \"%\"}/>\n})}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}