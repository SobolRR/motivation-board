{"version":3,"sources":["components/Xaxis.jsx","core/api.js","App.js","index.js"],"names":["Xaxis","props","points","values","map","value","idx","className","style","left","maxValue","defaultProps","instance","axios","create","baseURL","fetchProfitByManages","a","post","link","result","data","App","useState","records","setRecords","colors","totalGoal","length","useEffect","then","item","color","name","employee","sellSum","toFixed","sort","b","ReactDOM","render","document","getElementById"],"mappings":"mPACaA,EAAQ,SAACC,GAClB,IAAMC,EAASD,EAAME,OAAOC,KAAI,SAACC,EAAMC,GAErC,OAAW,qBAAKC,UAAU,QAAf,SAAiC,sBAAMA,UAAU,gBAAgBC,MAAO,CAACC,KAAa,IAARJ,EAAcJ,EAAMS,SAAW,KAA5E,SAAoFL,KAAzFC,MAEzC,OACA,qBAAKC,UAAU,SAAf,SACGL,KAILF,EAAMW,aAAe,CACnBR,OAAO,CAAC,IAAM,IAAO,KAAO,IAAO,O,qCCTjCS,E,OAAWC,EAAMC,OAAO,CAACC,QAAQ,uCAE1BC,EAAoB,uCAAG,4BAAAC,EAAA,4DAErB,oGAFqB,SAIbL,EAASM,KAAK,IAAK,CAAEC,KAF7B,sGAFqB,cAI5BC,EAJ4B,yBAKzBA,EAAOC,MALkB,2CAAH,qD,QCMlB,SAASC,EAAIrB,GAAQ,IAAD,EACLsB,mBAAS,IADJ,mBAC5BC,EAD4B,KACnBC,EADmB,KAG7BC,EAAS,CAAC,UAAU,UAAU,WAC9BC,EAAY,IACKH,EAAQI,QAAqBJ,EAAQI,OAoB1D,OAfFC,qBAAU,WACRb,IAAuBc,MAAK,SAACT,GAC3B,IAAMG,EAAUH,EAAKjB,KAAI,SAAC2B,EAAKzB,GAC7B,IAAM0B,EAAQN,EAAOpB,GACrB,MAAO,CACL2B,KAAKF,EAAKG,SAASD,KACnB5B,QAAS0B,EAAKI,QAAU,KAAKC,QAAQ,GACrCJ,YAEDK,MAAK,SAACpB,EAAGqB,GAAJ,OAAUA,EAAEjC,MAAQY,EAAEZ,SAC9BoB,EAAWD,QAGb,IAEQ,qBAAKjB,UAAU,UAAf,SACR,cAAC,IAAD,MCjCFgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1fc134cf.chunk.js","sourcesContent":["\nexport const Xaxis = (props) => {\n    const points = props.values.map((value,idx) => {\n\n      return     <div className=\"point\" key={idx}><span className=\"point__number\" style={{left:value * 100 / props.maxValue  +\"%\"}} >{value}</span></div>\n    })\n    return (\n    <div className=\"x-axis\">\n      {points}\n    </div>)\n  }\n\n  Xaxis.defaultProps = {\n    values:[50000,100000,150000,200000,250000]\n  }","import axios from \"axios\"\n\n\n\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchProfitByManages = async () => {\n  \n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/byemployee?momentFrom=2021-03-01 00:00:01 \"\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\n\n","import {useEffect,useState} from 'react'\nimport \"./App.scss\"\nimport 'antd/dist/antd.css';\nimport { ProgressBar } from \"./components/ProgressBar\"\nimport { fetchProfitByManages } from './core/api';\nimport {Spin} from 'antd'\n\n\nconst personalPoints = [35000,50000,67000,100000]\nconst commonPoints = [50000,100000,150000,200000,250000,300000]\n\n\nexport default function App(props) {\nconst [records, setRecords] = useState([]\n)\nconst colors = [\"#e4a21f\",\"#437fb7\",\"#3b8c13\"]\nconst totalGoal = 200000\nconst personalGoal = !!records.length ? totalGoal / records.length : 0\n\n\n\n\nuseEffect(()=>{\n  fetchProfitByManages().then((data)=>{\n    const records = data.map((item,idx) => {\n      const color = colors[idx]\n      return {\n        name:item.employee.name,\n        value: +(item.sellSum / 100).toFixed(0),\n        color\n      }\n    }).sort((a, b) => b.value - a.value )\n    setRecords(records)\n  })\n  \n},[])\nif(true){\n  return  <div className=\"spinner\">\n  <Spin />\n</div>\n}\n\n  return (\n    <>\n    <ProgressBar goal={totalGoal} records = {records} planMarkerPos={totalGoal * 100 / 300000 + \"%\"} pointsValues={commonPoints} totalGoal={totalGoal}/>\n    {records.map((record)=> {\n  return <ProgressBar records={[record]} key={record.name} pointsValues={personalPoints} totalGoal={personalGoal} planMarkerPos={personalGoal * 100 / Math.max(...personalPoints) + \"%\"}/>\n})}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}